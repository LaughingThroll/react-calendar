{"version":3,"sources":["components/common/Alert/alert.module.scss","components/Summary/summary.module.scss","components/common/Button/button.module.scss","components/CalendarNavigation/calendarNavigation.module.scss","components/common/Cells/cells.module.scss","components/Team/TeamInfo/teamInfo.module.scss","components/common/FormItem/formItem.module.scss","components/common/CountUsers/users.module.scss","components/CalendarHeader/calendarHeader.module.scss","components/CalendarFooter/calendarFooter.module.scss","components/CalendarModal/CalendarModalHeader/calendarModalHeader.module.scss","components/common/Form/form.module.scss","components/common/InputDate/inputDate.module.scss","components/common/Modal/Modal/modal.module.scss","components/common/Select/Select/select.module.scss","components/common/WeekendPercents/weekendPercents.module.scss","components/common/Modal/ModalHeader/modalHeader.module.scss","components/common/Modal/ModalBody/modalBody.module.scss","components/common/Modal/ModalFooter/modalFooter.module.scss","types/cell.ts","components/common/Button/index.tsx","components/common/Form/index.tsx","components/common/FormItem/index.tsx","components/common/InputDate/index.tsx","assets/images/icons/users.svg","components/common/CountUsers/index.tsx","components/common/WeekendPercents/index.tsx","components/common/Alert/index.tsx","utils/date/lastDayInMonth/index.ts","utils/date/isEqualDate/index.ts","utils/date/isWeekend/index.ts","utils/date/getDayInBinaryString/index.ts","utils/date/reverseDate/index.ts","utils/date/normalizeDate/index.ts","utils/date/getCountDays/index.ts","utils/date/formatDateInKebabCase/index.ts","utils/date/getFutureOrPastDate/index.ts","utils/forArrays/createArrayFromNumber/index.ts","utils/forArrays/findByID/index.ts","utils/date/getAllDaysInMonth/index.ts","components/CalendarNavigation/index.tsx","components/common/Cells/Cell/index.tsx","components/common/Cells/CellSumm/index.tsx","types/model/vacation.ts","components/CalendarHeader/CalendarHeaderCell/index.tsx","components/CalendarHeader/index.tsx","utils/vacations/checkVacation/index.ts","utils/vacations/getTypeVacation/index.ts","components/CalendarModal/CalendarModalHeader/index.tsx","utils/getBinaryNumber/index.ts","utils/vacations/getDetailedVacation/index.ts","utils/vacations/getSplitVacations/index.ts","utils/vacations/getFilteredVacationsByMonth/index.ts","utils/vacations/getSumVacationsDaysByMonth/index.ts","utils/vacations/getSumVacationsDaysByDay/index.ts","utils/vacations/isFirstDay/index.ts","utils/vacations/isLastDay/index.ts","utils/vacations/vacationIncludesVacation/index.ts","utils/vacations/hasExistVacation/index.ts","utils/vacations/getMemberVacations/index.ts","components/CalendarFooter/index.tsx","components/Summary/index.tsx","hooks/useToggle.ts","hooks/useCalculateWidth.ts","hooks/useInput.ts","hooks/useSelect.ts","hooks/useAsync.ts","hooks/useCountDays.ts","components/Member/MemberCell/index.tsx","components/Member/index.tsx","utils/teams/index.ts","components/Team/TeamInfo/index.tsx","theme.ts","components/Team/index.tsx","components/common/Modal/Modal/index.tsx","components/common/Modal/ModalHeader/index.tsx","components/common/Modal/ModalBody/index.tsx","components/common/Modal/ModalFooter/index.tsx","components/CalendarModal/index.tsx","components/CalendarModal/CalendarModalFooter/index.tsx","components/CalendarFormItems/FormDates/index.tsx","components/common/Select/Select/index.tsx","components/common/Select/Option/index.tsx","components/CalendarFormItems/FormTeamsSelect/index.tsx","components/CalendarFormItems/FormMembersSelect/index.tsx","components/CalendarFormItems/FormVacationTypeSelect/index.tsx","api/URLS.ts","utils/makeRequest/index.ts","api/teams.ts","api/vacations.ts","containers/App.tsx","index.tsx"],"names":["module","exports","CellVariants","Button","type","children","secondary","disabled","classNames","iconPlus","rest","button","styles","button_icon_plus","button_secondary","button_primary","button_disabled","className","classnames","join","React","memo","form","form__item","Form","Children","map","child","i","FormItem","title","inner","formItem","formItem__title","formItem__inner","InputDate","label","inputDate","inputDate__field","users","users__count","users__svg","CountUsers","src","usersSvg","countUsers","alt","weekendPercent","WeekendPercents","percent","alert","alertWrapper","alert__message","alert__message_error","alert__message_success","alert__message_warning","alert__button","alert__button_error","alert__button_success","alert__button_warning","Alert","message","onAccept","buttonText","error","success","warning","onClick","split","lastDayInMonth","date","Date","getFullYear","getMonth","getDate","isEqualDate","dateArr","Number","year","month","day","isWeekend","getDay","getDayInBinaryString","toLocaleString","weekday","substring","reverseDate","dateInString","splitSeparator","joinSeparator","reverse","normalizeDate","timeRegExp","NORMALIZE_TIME","test","replace","getCountDays","firstDate","secondDate","Math","floor","parse","formatDateInKebabCase","toISOString","match","getFutureOrPastDate","createArrayFromNumber","count","Array","from","length","keys","num","findByID","array","value","find","el","id","Error","getAllDaysInMonth","NavigationDirection","MonthNavigation","cellGray","Cell","variant","TD","cellDate","createElement","cellSumm","CellSumm","VacationTypes","calendarNavigation","calendarNavigation__currentDate","calendarNavigation__btn","calendarNavigation__btn_prevMonth","calendarNavigation__btn_nextMonth","CalendarNavigation","onChangeMonth","formatedDate","toLocaleDateString","changeMonth","useCallback","NEXT","PREV","setMonth","switchMonthOnKey","e","key","ARROW_LEFT","ARROW_RIGHT","useEffect","window","addEventListener","removeEventListener","CalendarHeaderCell","TH","calendarHeader","calendarHeader__row","calendarHeader__cell","CalendarHeader","index","checkVacation","startDate","endDate","ErrorsText","getTypeVacation","vacations","PAID","arr","some","getBinaryNumber","number","toString","getDetailedVacation","vacation","separator","startYear","startMonth","startDay","endYear","endMonth","endDay","getSplitedVacation","lastDay","getSplitedFullMonth","getIntermediatesSplitVacation","arrVacations","lastDayForCurrentMonth","push","getSplitVacations","flatMap","diff","getFilteredVacationsByMonth","filter","currentMonth","currentYear","getSumVacationsDaysByMonth","reduce","acc","getSumVacationsDaysByDay","filteredVacations","isFirstDay","Boolean","isLastDay","vacationIncludesVacation","isOuterVacation","isInVacation","hasExistVacation","currentVacation","getMemberVacations","teams","memberID","members","calendarFooter","calendarFooter__cell","calendarFooter__row","CalendarFooter","useState","setVacations","summary","summary__inner","summary__title","summary__text","summary__users","summary__weekendPercent","SummaryComponent","useToggle","initialValue","isOpen","setIsOpen","toggleOpen","useCalucateWidth","updater","elementRef","useRef","width","setWidth","current","getBoundingClientRect","toFixed","useInput","setValue","isDirty","setDirty","changeValue","target","useSelect","useAsync","asyncFn","instant","data","setData","loading","setLoading","setError","immediate","setImmediate","executeFn","a","res","useCountDays","countDays","setCountDays","isValidDays","setIsValidDays","localCountDays","condition","MemberCell","vacationElement","isPaid","isUnPaid","UN_PAID","isStartDay","isEndDay","currentStartVacation","countDayInVacation","ref","style","MemberComponent","theme","name","allDays","newVacations","summVacationsInMonth","getPercentageOfAbsentCount","percentageOfAbsent","teamInfo","teamInfo__name","teamInfo__other","teamInfo__countUsers","TeamInfo","THEMES","TeamComponent","team","themeIndex","mainTheme","member","Member","Modal","open","onClose","overlay","modal","modalHeader","ModalHeader","modalBody","ModalBody","modalFooter","ModalFooter","ErrorsMessage","calendarModalHeader","calendarModalHeader__title","calendarModalHeader__days","CalendarModalHeader","IS_NOT_VALID_DAYS","CalendarModalFooter","isDisabled","onSubmit","FormDates","onChange","renderOptions","isOption","Select","select","select__main","Option","select__option","FormTeamsSelect","console","log","FormMembersSelect","teamId","FormVacationTypeSelect","CalendarModal","setIsDisabled","errorMessage","setErrorMessage","teamsSelect","membersSelect","typesSelect","undefined","currentVacations","setCurrentVacations","currentTeam","defaultTeamID","currentMember","defaultMemberID","vacationDate","submitVacation","currentTeamID","currentMemberID","VACATION_INCLUDE_VACATION","then","MEMBER_IS_UNDEFINED","MAIN_URL","makeRequest","URL","options","fetch","json","getTeams","Object","values","forEach","patchVacation","preparedVacation","now","method","body","JSON","stringify","App","setDate","setTeams","asyncPathcVacation","setCountUsers","setPercent","calendarModal","Team","Summary","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fd700b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertWrapper\":\"alert_alertWrapper__3ElwI\",\"alert\":\"alert_alert__iz_wu\",\"alert__message\":\"alert_alert__message__2OPal\",\"alert__message_error\":\"alert_alert__message_error__VE44k\",\"alert__message_success\":\"alert_alert__message_success__1fioN\",\"alert__message_warning\":\"alert_alert__message_warning__3p-zX\",\"alert__button\":\"alert_alert__button__1LYuY\",\"alert__button_error\":\"alert_alert__button_error__1qDxD\",\"alert__button_success\":\"alert_alert__button_success__3y0li\",\"alert__button_warning\":\"alert_alert__button_warning__FxLcO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"summary_summary__2Azoi\",\"summary__title\":\"summary_summary__title__2CffZ\",\"summary__inner\":\"summary_summary__inner__quC_P\",\"summary__users\":\"summary_summary__users__1djj-\",\"summary__weekendPercent\":\"summary_summary__weekendPercent__1rEDi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__NrOVN\",\"button_primary\":\"button_button_primary__1V_AG\",\"button_secondary\":\"button_button_secondary__3HBPU\",\"button_disabled\":\"button_button_disabled__1UD7s\",\"button_icon_plus\":\"button_button_icon_plus__Zml8L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendarNavigation__currentDate\":\"calendarNavigation_calendarNavigation__currentDate__1JJEm\",\"calendarNavigation\":\"calendarNavigation_calendarNavigation__3f6xK\",\"calendarNavigation__btn\":\"calendarNavigation_calendarNavigation__btn__1r8UT\",\"calendarNavigation__btn_prevMonth\":\"calendarNavigation_calendarNavigation__btn_prevMonth__22xsn\",\"calendarNavigation__btn_nextMonth\":\"calendarNavigation_calendarNavigation__btn_nextMonth__1s0ce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellSumm\":\"cells_cellSumm__BmYvT\",\"cellGray\":\"cells_cellGray__18OIN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"teamInfo__name\":\"teamInfo_teamInfo__name__26L2m\",\"teamInfo\":\"teamInfo_teamInfo__PbghZ\",\"teamInfo__other\":\"teamInfo_teamInfo__other__1YT2o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formItem__title\":\"formItem_formItem__title__yUT-X\",\"formItem__inner\":\"formItem_formItem__inner__3sEe2\",\"formItem\":\"formItem_formItem__3t-me\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"users_users__1K7My\",\"users__count\":\"users_users__count__3HoVk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendarHeader__number\":\"calendarHeader_calendarHeader__number__3AiIj\",\"calendarHeader__cell\":\"calendarHeader_calendarHeader__cell__3l5GO\",\"calendarHeader__day\":\"calendarHeader_calendarHeader__day__1vmFb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendarFooter__cell\":\"calendarFooter_calendarFooter__cell__127dC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendarModalHeader\":\"calendarModalHeader_calendarModalHeader__KfC3W\",\"calendarModalHeader__title\":\"calendarModalHeader_calendarModalHeader__title__2Dxna\",\"calendarModalHeader__days\":\"calendarModalHeader_calendarModalHeader__days__2RWZn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__item\":\"form_form__item__DC_FU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputDate\":\"inputDate_inputDate__2c9Mt\",\"inputDate__field\":\"inputDate_inputDate__field__1HWO2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal_overlay__3WpLV\",\"modal\":\"modal_modal__IUs-1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"select_select__dFB5A\",\"select__main\":\"select_select__main__WzDf_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weekendPercent\":\"weekendPercents_weekendPercent__3icw1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalHeader\":\"modalHeader_modalHeader__2ZVcA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBody\":\"modalBody_modalBody__m6VK4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalFooter\":\"modalFooter_modalFooter__1Rldb\"};","export enum CellVariants {\r\n  TH = 'th',\r\n  TD = 'td',\r\n}\r\n","import React from 'react'\r\nimport classnames from 'classnames'\r\nimport styles from './button.module.scss'\r\nimport { TChildren } from '../../../types/utilsTypes'\r\n\r\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  type?: 'button' | 'submit' | 'reset'\r\n  classNames?: string[]\r\n  secondary?: boolean\r\n  iconPlus?: boolean\r\n  disabled?: boolean\r\n  onClick?: (...args: any) => any\r\n  children?: TChildren\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({\r\n  type = 'button',\r\n  children,\r\n  secondary,\r\n  disabled,\r\n  classNames = [],\r\n  iconPlus,\r\n  ...rest\r\n}) => {\r\n  const { button, button_icon_plus, button_secondary, button_primary, button_disabled } = styles\r\n  return (\r\n    <button\r\n      type={type}\r\n      className={`${classnames({\r\n        [button]: true,\r\n        [button_icon_plus]: iconPlus,\r\n        [button_secondary]: secondary,\r\n        [button_primary]: !secondary,\r\n        [button_disabled]: disabled,\r\n      })} ${classNames.join(' ')}`}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default React.memo(Button)\r\n","import React from 'react'\r\nimport styles from './form.module.scss'\r\n\r\nexport interface FormProps {\r\n  children?: any\r\n  classNames?: string[]\r\n}\r\n\r\nconst { form, form__item } = styles\r\n\r\nconst Form: React.FC<FormProps> = ({ children, classNames = [] }) => {\r\n  return (\r\n    <form className={[form, ...classNames].join(' ')}>\r\n      {React.Children.map(children, (child, i) => (\r\n        <div key={i} className={form__item}>\r\n          {child}\r\n        </div>\r\n      ))}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default React.memo(Form)\r\n","import React from 'react'\r\nimport styles from './formItem.module.scss'\r\nimport { TChildren } from '../../../types/utilsTypes'\r\n\r\nexport interface FormItemProps {\r\n  title?: string\r\n  inner?: boolean\r\n  children?: TChildren\r\n  classNames?: string[]\r\n}\r\n\r\nconst FormItem: React.FC<FormItemProps> = ({ title = 'Title', inner, classNames = [], children }) => {\r\n  const { formItem, formItem__title, formItem__inner } = styles\r\n\r\n  return (\r\n    <div className={[formItem, ...classNames].join(' ')}>\r\n      <h5 className={formItem__title}>{title}</h5>\r\n      {inner ? <div className={formItem__inner}> {children}</div> : children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(FormItem)\r\n","import React from 'react'\r\nimport styles from './inputDate.module.scss'\r\n\r\nexport interface InputDateProps extends React.InputHTMLAttributes<HTMLInputElement> {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n  label?: string\r\n}\r\n\r\nconst InputDate: React.FC<InputDateProps> = ({ label, ...rest }) => {\r\n  const { inputDate, inputDate__field } = styles\r\n  return (\r\n    <label className={inputDate}>\r\n      {label} <input className={inputDate__field} type=\"date\" {...rest} />\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default React.memo(InputDate)\r\n","export default __webpack_public_path__ + \"static/media/users.4f0c7a0f.svg\";","import React from 'react'\r\nimport styles from './users.module.scss'\r\nimport usersSvg from '../../../assets/images/icons/users.svg'\r\n\r\nexport interface CountUsersProps {\r\n  countUsers: number\r\n  src?: string\r\n  classNames?: string[]\r\n}\r\n\r\nconst { users, users__count, users__svg } = styles\r\n\r\nconst CountUsers: React.FC<CountUsersProps> = ({ src = usersSvg, countUsers, classNames = [] }) => {\r\n  return (\r\n    <div className={[users, ...classNames].join(' ')}>\r\n      <img className={users__svg} src={src} alt=\"\" />\r\n      <span className={users__count}>{countUsers}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(CountUsers)\r\n","import React from 'react'\r\nimport styles from './weekendPercents.module.scss'\r\n\r\nexport interface WeekendPercentsProps {\r\n  percent: number\r\n  classNames?: string[]\r\n}\r\n\r\nconst { weekendPercent } = styles\r\n\r\nconst WeekendPercents: React.FC<WeekendPercentsProps> = ({ percent, classNames = [] }) => {\r\n  return <div className={[weekendPercent, ...classNames].join(' ')}>{percent} %</div>\r\n}\r\n\r\nexport default React.memo(WeekendPercents)\r\n","import React from 'react'\r\nimport classnames from 'classnames'\r\nimport styles from './alert.module.scss'\r\n\r\nimport { Button } from '../'\r\nimport { TChildren } from '../../../types/utilsTypes'\r\n\r\nexport interface AlertProps {\r\n  onAccept: () => void\r\n  message: TChildren\r\n  success?: boolean\r\n  error?: boolean\r\n  warning?: boolean\r\n  classNames?: string[]\r\n  buttonText?: TChildren\r\n}\r\n\r\nconst {\r\n  alert,\r\n  alertWrapper,\r\n  alert__message,\r\n  alert__message_error,\r\n  alert__message_success,\r\n  alert__message_warning,\r\n  alert__button,\r\n  alert__button_error,\r\n  alert__button_success,\r\n  alert__button_warning,\r\n} = styles\r\n\r\nconst Alert: React.FC<AlertProps> = ({\r\n  message = 'Alert fake',\r\n  onAccept,\r\n  buttonText = 'Okey',\r\n  error,\r\n  success,\r\n  warning,\r\n  classNames = [],\r\n}) => {\r\n  return (\r\n    <div className={alertWrapper}>\r\n      <div className={[alert, ...classNames].join(' ')}>\r\n        <p\r\n          className={classnames({\r\n            [alert__message]: true,\r\n            [alert__message_error]: error,\r\n            [alert__message_success]: success,\r\n            [alert__message_warning]: warning,\r\n          })}\r\n        >\r\n          {message}\r\n        </p>\r\n        <Button\r\n          onClick={onAccept}\r\n          classNames={classnames({\r\n            [alert__button]: true,\r\n            [alert__button_error]: error,\r\n            [alert__button_success]: success,\r\n            [alert__button_warning]: warning,\r\n          }).split(' ')}\r\n        >\r\n          {buttonText}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(Alert)\r\n","const lastDayInMonth = (date: Date): number => new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()\r\n\r\nexport default lastDayInMonth\r\n","const isEqualDate = (date: Date, dateArr: string[]): boolean => {\r\n  const [year, month, day] = dateArr.map(Number)\r\n  return date.getDate() === day && date.getMonth() + 1 === month && date.getFullYear() === year\r\n}\r\n\r\nexport default isEqualDate\r\n","const isWeekend = (date: Date) => date.getDay() === 6 || date.getDay() === 0\r\n\r\nexport default isWeekend\r\n","const getDayInBinaryString = (date: Date): string => {\r\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate())\r\n    .toLocaleString('en-US', { weekday: 'short' })\r\n    .substring(-1, 2)\r\n}\r\n\r\nexport default getDayInBinaryString\r\n","const reverseDate = (dateInString: string, splitSeparator: string = '.', joinSeparator: string = '-'): string => {\r\n  return dateInString.split(splitSeparator).reverse().join(joinSeparator)\r\n}\r\n\r\nexport default reverseDate\r\n","const normalizeDate = (dateInString: string): string => {\r\n  const timeRegExp = /T.*/g\r\n  const NORMALIZE_TIME = 'T00:00:00'\r\n\r\n  return timeRegExp.test(dateInString)\r\n    ? dateInString.replace(timeRegExp, NORMALIZE_TIME)\r\n    : `${dateInString}${NORMALIZE_TIME}`\r\n}\r\n\r\nexport default normalizeDate\r\n","const getCountDays = (firstDate: string, secondDate: string): number => {\r\n  const SECONDS_IN_DAY: number = 1000 * 60 * 60 * 24\r\n  return Math.floor((Date.parse(secondDate) - Date.parse(firstDate)) / SECONDS_IN_DAY)\r\n}\r\n\r\nexport default getCountDays\r\n","const formatDateInKebabCase = (date: Date): string => date.toISOString().match(/\\d{4}-\\d{2}-\\d{2}/)![0]\r\nexport default formatDateInKebabCase\r\n","import formatDateInKebabCase from '../formatDateInKebabCase'\r\n\r\nconst getFutureOrPastDate = (day: number): string => {\r\n  return formatDateInKebabCase(\r\n    new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() + day + 1)\r\n  )\r\n}\r\n\r\nexport default getFutureOrPastDate\r\n","const createArrayFromNumber = (count: number): number[] => {\r\n  return [...Array.from<number>({ length: count }).keys()].map((num) => num + 1)\r\n}\r\n\r\nexport default createArrayFromNumber\r\n","const findByID = <T extends { id: any }>(array: T[], value: any): T | undefined | never => {\r\n  return array.find((el) => {\r\n    if (!el.id) throw new Error('Its element is not contains propperty ID')\r\n    return el.id === value\r\n  })\r\n}\r\n\r\nexport default findByID\r\n","import { createArrayFromNumber } from '../../forArrays/index'\r\nimport lastDayInMonth from '../lastDayInMonth'\r\n\r\nconst getAllDaysInMonth = (date: Date): Date[] => {\r\n  return createArrayFromNumber(lastDayInMonth(date)).map(\r\n    (day: number) => new Date(new Date(date.getFullYear(), date.getMonth(), day))\r\n  )\r\n}\r\n\r\nexport default getAllDaysInMonth\r\n","import React, { useEffect, useCallback } from 'react'\r\nimport styles from './calendarNavigation.module.scss'\r\n\r\nenum NavigationDirection {\r\n  ARROW_LEFT = 'ArrowLeft',\r\n  ARROW_RIGHT = 'ArrowRight',\r\n}\r\n\r\nenum MonthNavigation {\r\n  NEXT = 'next',\r\n  PREV = 'prev',\r\n}\r\n\r\ntype monthNavigationUnion = MonthNavigation.NEXT | MonthNavigation.PREV\r\n\r\nexport interface Navigation {\r\n  date: Date\r\n  onChangeMonth: (date: Date) => void\r\n  classNames?: string[]\r\n}\r\n\r\nconst {\r\n  calendarNavigation,\r\n  calendarNavigation__currentDate,\r\n  calendarNavigation__btn,\r\n  calendarNavigation__btn_prevMonth,\r\n  calendarNavigation__btn_nextMonth,\r\n} = styles\r\n\r\nconst CalendarNavigation: React.FC<Navigation> = ({ date, onChangeMonth, classNames = [] }) => {\r\n  const formatedDate = date.toLocaleDateString('en-US', { month: 'long', year: 'numeric' })\r\n\r\n  const changeMonth = useCallback(\r\n    (value: monthNavigationUnion) => {\r\n      let num = 0\r\n      if (value === MonthNavigation.NEXT) num = 1\r\n      if (value === MonthNavigation.PREV) num = -1\r\n      onChangeMonth(new Date(date.setMonth(date.getMonth() + num)))\r\n    },\r\n    [date, onChangeMonth]\r\n  )\r\n\r\n  const switchMonthOnKey = useCallback(\r\n    (e: KeyboardEvent) => {\r\n      if (e.key === NavigationDirection.ARROW_LEFT) changeMonth(MonthNavigation.PREV)\r\n      if (e.key === NavigationDirection.ARROW_RIGHT) changeMonth(MonthNavigation.NEXT)\r\n    },\r\n    [changeMonth]\r\n  )\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keyup', switchMonthOnKey)\r\n\r\n    return () => {\r\n      window.removeEventListener('keyup', switchMonthOnKey)\r\n    }\r\n  }, [switchMonthOnKey])\r\n\r\n  return (\r\n    <div className={[calendarNavigation, ...classNames].join(' ')}>\r\n      <button\r\n        className={[calendarNavigation__btn, calendarNavigation__btn_prevMonth].join(' ')}\r\n        onClick={() => changeMonth(MonthNavigation.PREV)}\r\n      ></button>\r\n      <div className={calendarNavigation__currentDate}>{formatedDate}</div>\r\n      <button\r\n        className={[calendarNavigation__btn, calendarNavigation__btn_nextMonth].join(' ')}\r\n        onClick={() => changeMonth(MonthNavigation.NEXT)}\r\n      ></button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(CalendarNavigation)\r\n","import React from 'react'\r\nimport classnames from 'classnames'\r\n\r\nimport styles from './../cells.module.scss'\r\n\r\nimport { isWeekend } from '../../../../utils/date'\r\n\r\nimport { CellVariants } from '../../../../types/cell'\r\n\r\nexport interface CellProps {\r\n  cellDate?: Date\r\n  variant?: CellVariants\r\n  classNames?: string[]\r\n  children?: any\r\n}\r\n\r\nconst { cellGray } = styles\r\n\r\nconst Cell: React.FC<CellProps> = ({ variant = CellVariants.TD, children, cellDate, classNames = [] }) => {\r\n  return React.createElement(\r\n    variant,\r\n    {\r\n      className: `${classnames({\r\n        [cellGray]: cellDate && isWeekend(cellDate),\r\n      })}  ${classNames.join(' ')}`,\r\n    },\r\n    children\r\n  )\r\n}\r\n\r\nexport default React.memo(Cell)\r\n","import React from 'react'\r\nimport classnames from 'classnames'\r\n\r\nimport { isWeekend } from '../../../../utils/date'\r\nimport styles from './../cells.module.scss'\r\n\r\nimport { CellVariants } from '../../../../types/cell'\r\n\r\nexport interface CellSummProps {\r\n  cellDate?: Date\r\n  variant?: CellVariants\r\n  classNames?: string[]\r\n  children?: any\r\n}\r\n\r\nconst { cellSumm, cellGray } = styles\r\n\r\nconst CellSumm: React.FC<CellSummProps> = ({ cellDate, variant = CellVariants.TD, children, classNames = [] }) => {\r\n  return React.createElement(\r\n    variant,\r\n    {\r\n      className: `${classnames({\r\n        [cellSumm]: true,\r\n        [cellGray]: cellDate && isWeekend(cellDate),\r\n      })} ${classNames.join(' ')}`,\r\n    },\r\n    children\r\n  )\r\n}\r\n\r\nexport default React.memo(CellSumm)\r\n","import { ID } from './../utilsTypes'\r\n\r\nexport enum VacationTypes {\r\n  PAID = 'Paid',\r\n  UN_PAID = 'UnPaid',\r\n}\r\n\r\nexport type vacationUnion = VacationTypes.PAID | VacationTypes.UN_PAID\r\n\r\nexport interface VacationDate {\r\n  startDate: string\r\n  endDate: string\r\n}\r\n\r\nexport interface Vacation extends VacationDate {\r\n  type: vacationUnion\r\n}\r\n\r\nexport interface VacationDTO extends Vacation {\r\n  currentTeamID: ID\r\n  currentMemberID: ID\r\n}\r\n","import React from 'react'\r\n\r\nimport Cell from '../../common/Cells/Cell'\r\n\r\nimport { getDayInBinaryString } from '../../../utils/date'\r\n\r\nimport { CellVariants } from '../../../types/cell'\r\n\r\nexport interface CalendarHeaderCellProps {\r\n  cellDate: Date\r\n  classNames?: string[]\r\n}\r\n\r\nconst CalendarHeaderCell: React.FC<CalendarHeaderCellProps> = ({ cellDate, classNames = [] }) => {\r\n  return (\r\n    <Cell cellDate={cellDate} variant={CellVariants.TH} classNames={classNames}>\r\n      <span className=\"calendar-header__day\">{getDayInBinaryString(cellDate)}</span>\r\n      <span className=\"calendar-header__number\">{cellDate.getDate()}</span>\r\n    </Cell>\r\n  )\r\n}\r\n\r\nexport default React.memo(CalendarHeaderCell)\r\n","import React from 'react'\r\n\r\nimport styles from './calendarHeader.module.scss'\r\n\r\nimport CalendarHeaderCell from './CalendarHeaderCell'\r\nimport { CellSumm } from '../common'\r\n\r\nimport { getAllDaysInMonth } from '../../utils/date'\r\n\r\nexport interface CalendarHeaderProps {\r\n  date: Date\r\n  children?: any\r\n  classNames?: string[]\r\n}\r\n\r\nconst { calendarHeader, calendarHeader__row, calendarHeader__cell } = styles\r\n\r\nconst CalendarHeader: React.FC<CalendarHeaderProps> = ({ date, children, classNames = [] }) => {\r\n  return (\r\n    <thead className={[calendarHeader, ...classNames].join(' ')}>\r\n      <tr className={calendarHeader__row}>\r\n        <th className={calendarHeader__cell}>{children}</th>\r\n        {getAllDaysInMonth(date).map((date, index) => (\r\n          <CalendarHeaderCell key={index} cellDate={date} classNames={[calendarHeader__cell]} />\r\n        ))}\r\n        <CellSumm classNames={[calendarHeader__cell, 'cell-gray']}>Sum </CellSumm>\r\n      </tr>\r\n    </thead>\r\n  )\r\n}\r\n\r\nexport default React.memo(CalendarHeader)\r\n","import { normalizeDate } from '../../date'\r\nimport { VacationDate } from '../../../types/model/vacation'\r\n\r\nconst checkVacation = (cellDate: Date, { startDate, endDate }: VacationDate): boolean => {\r\n  return cellDate >= new Date(normalizeDate(startDate)) && cellDate <= new Date(normalizeDate(endDate))\r\n}\r\n\r\nexport default checkVacation\r\n","import checkVacation from '../checkVacation'\r\n\r\nimport { Vacation, VacationTypes, vacationUnion } from '../../../types/model/vacation'\r\n\r\nconst getTypeVacation = (vacations: Vacation[], cellDate: Date, type: vacationUnion = VacationTypes.PAID): boolean => {\r\n  const arr = vacations.map(({ startDate, endDate, type }) =>\r\n    checkVacation(cellDate, { startDate, endDate }) ? type : null\r\n  )\r\n  return arr.some((el) => el === type)\r\n}\r\n\r\nexport default getTypeVacation\r\n","import React from 'react'\r\nimport styles from './calendarModalHeader.module.scss'\r\n\r\nimport { ModalHeader } from '../../common/Modal'\r\n\r\nexport interface CalendarModalHeaderProps {\r\n  isValidDays: boolean\r\n  countDays: number\r\n  classNames?: string[]\r\n}\r\n\r\nexport enum ErrorsText {\r\n  IS_NOT_VALID_DAYS = 'Is Not Valid',\r\n}\r\n\r\nconst { calendarModalHeader, calendarModalHeader__title, calendarModalHeader__days } = styles\r\n\r\nexport const CalendarModalHeader: React.FC<CalendarModalHeaderProps> = React.memo(\r\n  ({ isValidDays, countDays, classNames = [] }) => {\r\n    return (\r\n      <ModalHeader className={[calendarModalHeader, ...classNames]}>\r\n        <h4 className={calendarModalHeader__title}>Vacation Request</h4>\r\n        <div className={calendarModalHeader__days}> {isValidDays ? countDays : ErrorsText.IS_NOT_VALID_DAYS} Days</div>\r\n      </ModalHeader>\r\n    )\r\n  }\r\n)\r\n","export const getBinaryNumber = (number: number): string =>\r\n  number > 0 && number < 10 ? `0${number}` : number.toString()\r\n","import { Vacation } from './../../../types/model/vacation'\r\n\r\nexport const getDetailedVacation = (vacation: Vacation, separator: string = '-') => {\r\n  const { startDate, endDate, type } = vacation\r\n  const [startYear, startMonth, startDay] = startDate.split(separator).map(Number)\r\n  const [endYear, endMonth, endDay] = endDate.split(separator).map(Number)\r\n  return { startDay, startMonth, startYear, endDay, endMonth, endYear, type }\r\n}\r\n","import { getBinaryNumber } from '../../getBinaryNumber'\r\nimport { getDetailedVacation } from '../getDetailedVacation'\r\nimport { lastDayInMonth } from '../../date'\r\n\r\nimport { Vacation, vacationUnion } from '../../../types/model/vacation'\r\n\r\ninterface SplitedFullMonthArgs {\r\n  month: number\r\n  endYear: number\r\n  type: vacationUnion\r\n  lastDay: number\r\n}\r\n\r\nexport const getSplitedVacation = (vacation: Vacation, lastDay: number, separator: string = '-'): Vacation[] => {\r\n  const { startDate, endDate, type } = vacation\r\n  const { startMonth, endMonth, startYear, endYear } = getDetailedVacation(vacation, separator)\r\n  return [\r\n    {\r\n      startDate,\r\n      endDate: [startYear, getBinaryNumber(startMonth), lastDay].join(separator),\r\n      type,\r\n    },\r\n    {\r\n      startDate: [endYear, getBinaryNumber(endMonth), '01'].join(separator),\r\n      endDate,\r\n      type,\r\n    },\r\n  ]\r\n}\r\n\r\nexport const getSplitedFullMonth = (\r\n  { month, endYear, type, lastDay }: SplitedFullMonthArgs,\r\n  separator: string = '-'\r\n): Vacation => ({\r\n  startDate: [endYear, getBinaryNumber(month), '01'].join(separator),\r\n  endDate: [endYear, getBinaryNumber(month), lastDay].join(separator),\r\n  type,\r\n})\r\n\r\nexport const getIntermediatesSplitVacation = (\r\n  vacation: Vacation,\r\n  lastDay: number,\r\n  separator: string = '-'\r\n): Vacation[] => {\r\n  let { startDay, startMonth, endMonth, startYear, endYear, type } = getDetailedVacation(vacation, separator)\r\n  const arrVacations = getSplitedVacation(vacation, lastDay)\r\n\r\n  while (startMonth !== endMonth - 1) {\r\n    const lastDayForCurrentMonth = lastDayInMonth(new Date(startYear, startMonth, startDay))\r\n    startMonth += 1\r\n    arrVacations.push(getSplitedFullMonth({ month: startMonth, lastDay: lastDayForCurrentMonth, endYear, type }, '-'))\r\n  }\r\n\r\n  return arrVacations\r\n}\r\n\r\nconst getSplitVacations = (vacations: Vacation[], lastDay: number, separator: string = '-'): Vacation[] => {\r\n  return vacations.flatMap((vacation) => {\r\n    const { endMonth, startMonth } = getDetailedVacation(vacation, separator)\r\n    const diff = endMonth - startMonth\r\n\r\n    if (diff === 1) return getSplitedVacation(vacation, lastDay, separator)\r\n\r\n    if (diff > 1) return getIntermediatesSplitVacation(vacation, lastDay, separator)\r\n\r\n    return vacation\r\n  })\r\n}\r\n\r\nexport default getSplitVacations\r\n","import { Vacation } from '../../../types/model/vacation'\r\nimport { getDetailedVacation } from '../getDetailedVacation'\r\n\r\nexport const getFilteredVacationsByMonth = (\r\n  vacations: Vacation[],\r\n  cellDate: Date,\r\n  separator: string = '-'\r\n): Vacation[] => {\r\n  return vacations.filter((vacation) => {\r\n    const { startMonth, endMonth, startYear, endYear } = getDetailedVacation(vacation, separator)\r\n    const currentMonth = cellDate.getMonth() + 1\r\n    const currentYear = cellDate.getFullYear()\r\n\r\n    return (\r\n      (currentMonth === startMonth || currentMonth === endMonth) &&\r\n      (currentYear === startYear || currentYear === endYear)\r\n    )\r\n  })\r\n}\r\n","import { getFilteredVacationsByMonth } from '../getFilteredVacationsByMonth'\r\nimport { getCountDays, reverseDate } from '../../date'\r\nimport { Vacation } from '../../../types/model/vacation'\r\n\r\nconst getSumVacationsDaysByMonth = (vacations: Vacation[], cellDate: Date): number => {\r\n  const filteredArray = getFilteredVacationsByMonth(vacations, cellDate)\r\n  return filteredArray.reduce((acc, vacation) => {\r\n    return (acc += getCountDays(reverseDate(vacation.startDate), reverseDate(vacation.endDate)) + 1)\r\n  }, 0)\r\n}\r\n\r\nexport default getSumVacationsDaysByMonth\r\n","import { getFilteredVacationsByMonth } from '../getFilteredVacationsByMonth'\r\nimport { getDetailedVacation } from '../getDetailedVacation'\r\nimport { Vacation } from '../../../types/model/vacation'\r\n\r\nconst getSumVacationsDaysByDay = (vacations: Vacation[], cellDate: Date, separator: string = '-'): number => {\r\n  const filteredVacations = getFilteredVacationsByMonth(vacations, cellDate)\r\n\r\n  return filteredVacations.reduce((acc, vacation) => {\r\n    const { startDay, endDay } = getDetailedVacation(vacation, separator)\r\n    return (acc += +(cellDate.getDate() >= startDay && cellDate.getDate() <= endDay))\r\n  }, 0)\r\n}\r\n\r\nexport default getSumVacationsDaysByDay\r\n","import { isEqualDate } from '../../date'\r\nimport { Vacation } from '../../../types/model/vacation'\r\n\r\nconst isFirstDay = (vacations: Vacation[], date: Date, separator: string = '-'): boolean => {\r\n  return vacations.map(({ startDate }) => isEqualDate(date, startDate.split(separator))).some(Boolean)\r\n}\r\n\r\nexport default isFirstDay\r\n","import { isEqualDate } from './../../date'\r\nimport { Vacation } from '../../../types/model/vacation'\r\n\r\nconst isLastDay = (vacations: Vacation[], date: Date, separator: string = '-'): boolean => {\r\n  return vacations.map(({ endDate }) => isEqualDate(date, endDate.split(separator))).some(Boolean)\r\n}\r\n\r\nexport default isLastDay\r\n","import { normalizeDate } from '../../date'\r\nimport checkVacation from '../checkVacation'\r\n\r\nimport { VacationDate, Vacation } from '../../../types/model/vacation'\r\n\r\nconst vacationIncludesVacation = ({ startDate, endDate }: VacationDate, vacation: Vacation): boolean => {\r\n  const isOuterVacation =\r\n    checkVacation(new Date(normalizeDate(vacation.startDate)), { startDate, endDate }) ||\r\n    checkVacation(new Date(normalizeDate(vacation.endDate)), { startDate, endDate })\r\n\r\n  const isInVacation =\r\n    new Date(startDate) >= new Date(normalizeDate(vacation.startDate)) &&\r\n    new Date(endDate) <= new Date(normalizeDate(vacation.endDate))\r\n\r\n  return isOuterVacation || isInVacation\r\n}\r\n\r\nexport default vacationIncludesVacation\r\n","import vacationIncludesVacation from './../vacationIncludesVacation'\r\nimport { Vacation, VacationDate } from '../../../types/model/vacation'\r\n\r\nconst hasExistVacation = (vacations: Vacation[], currentVacation: VacationDate): boolean => {\r\n  return vacations.map((vacation) => vacationIncludesVacation(currentVacation, vacation)).some(Boolean)\r\n}\r\n\r\nexport default hasExistVacation\r\n","import { Team } from '../../../types/model/team'\r\nimport { Vacation } from '../../../types/model/vacation'\r\nimport { ID } from '../../../types/utilsTypes'\r\n\r\nconst getMemberVacations = (teams: Team[], memberID: ID): Vacation[] | undefined => {\r\n  return teams.flatMap(({ members }) => members).find(({ id }) => id === memberID)?.vacations\r\n}\r\n\r\nexport default getMemberVacations\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport styles from './calendarFooter.module.scss'\r\n\r\nimport { Cell, CellSumm } from '../common'\r\n\r\nimport { getAllDaysInMonth, lastDayInMonth } from '../../utils/date'\r\nimport { getSplitVacations, getSumVacationsDaysByDay } from '../../utils/vacations'\r\n\r\nimport { Vacation } from '../../types/model/vacation'\r\nimport { Team } from '../../types/model/team'\r\n\r\nexport interface CalendarFooterProps {\r\n  teams: Team[]\r\n  date: Date\r\n  classNames?: string[]\r\n}\r\n\r\nconst { calendarFooter, calendarFooter__cell, calendarFooter__row } = styles\r\n\r\nconst CalendarFooter: React.FC<CalendarFooterProps> = ({ teams, date, classNames = [] }) => {\r\n  const [vacations, setVacations] = useState<Vacation[]>([])\r\n\r\n  useEffect(() => {\r\n    const vacations = teams.flatMap(({ members }) => members).flatMap(({ vacations }) => vacations)\r\n    setVacations(getSplitVacations(vacations, lastDayInMonth(date)))\r\n  }, [date, teams])\r\n\r\n  return (\r\n    <tfoot className={[calendarFooter, ...classNames].join(' ')}>\r\n      <tr className={calendarFooter__row}>\r\n        <Cell classNames={[calendarFooter__cell]}>Day-Person-Stats</Cell>\r\n        {getAllDaysInMonth(date).map((date, index) => {\r\n          return (\r\n            <CellSumm key={index} cellDate={date} classNames={[calendarFooter__cell]}>\r\n              {getSumVacationsDaysByDay(vacations, date)}\r\n            </CellSumm>\r\n          )\r\n        })}\r\n        <Cell classNames={[calendarFooter__cell]}></Cell>\r\n      </tr>\r\n    </tfoot>\r\n  )\r\n}\r\n\r\nexport default React.memo(CalendarFooter)\r\n","import React from 'react'\r\nimport { CountUsers, WeekendPercents } from '../../components/common'\r\nimport styles from './summary.module.scss'\r\n\r\nexport interface Summary {\r\n  countUsers: number\r\n  percent: number\r\n  date: Date\r\n  classNames?: string[]\r\n}\r\n\r\nconst { summary, summary__inner, summary__title, summary__text, summary__users, summary__weekendPercent } = styles\r\n\r\nconst SummaryComponent: React.FC<Summary> = ({ date, countUsers, percent, classNames = [] }) => {\r\n  return (\r\n    <div className={[summary, ...classNames].join(' ')}>\r\n      <div className={summary__title}>{date.toLocaleDateString('en-US', { month: 'long' })} teams Summary</div>\r\n      <div className={summary__inner}>\r\n        <div className={summary__text}>On vacation</div>\r\n        <CountUsers countUsers={countUsers} classNames={[summary__users]} />\r\n        <WeekendPercents percent={percent} classNames={[summary__weekendPercent]} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(SummaryComponent)\r\n","import { useState } from 'react'\r\n\r\ninterface IUseToggle {\r\n  isOpen: boolean\r\n  toggleOpen: () => void\r\n}\r\n\r\nconst useToggle = (initialValue: boolean = false): IUseToggle => {\r\n  const [isOpen, setIsOpen] = useState(initialValue)\r\n\r\n  const toggleOpen = () => {\r\n    setIsOpen(!isOpen)\r\n  }\r\n\r\n  return {\r\n    isOpen,\r\n    toggleOpen,\r\n  }\r\n}\r\n\r\nexport default useToggle\r\n","import { useEffect, useState, useRef } from 'react'\r\n\r\nconst useCalucateWidth = <T, R extends HTMLElement>(updater: T) => {\r\n  const elementRef = useRef<R>(null)\r\n  const [width, setWidth] = useState(0)\r\n\r\n  useEffect(() => {\r\n    if (elementRef.current) {\r\n      const width = elementRef.current.getBoundingClientRect().width.toFixed(1)\r\n      setWidth(+width)\r\n    }\r\n  }, [updater])\r\n\r\n  return {\r\n    elementRef,\r\n    width,\r\n  }\r\n}\r\n\r\nexport default useCalucateWidth\r\n","import React, { useState } from 'react'\r\n\r\ninterface IUseInput {\r\n  value: string\r\n  changeValue: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n  isDirty: boolean\r\n}\r\n\r\nconst useInput = (initialValue = ''): IUseInput => {\r\n  const [value, setValue] = useState(initialValue)\r\n  const [isDirty, setDirty] = useState(false)\r\n\r\n  const changeValue = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    setValue(e.target.value)\r\n    if (!isDirty) setDirty(true)\r\n  }\r\n\r\n  return {\r\n    value,\r\n    changeValue,\r\n    isDirty,\r\n  }\r\n}\r\n\r\nexport default useInput\r\n","import React, { useState } from 'react'\r\n\r\nconst useSelect = (initialValue: string) => {\r\n  const [value, setValue] = useState(initialValue)\r\n\r\n  const changeValue = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  return {\r\n    value,\r\n    changeValue,\r\n    setValue,\r\n  }\r\n}\r\n\r\nexport default useSelect\r\n","import React, { useState, useCallback, useEffect } from 'react'\r\n\r\ninterface useAsyncReturn<T, R> {\r\n  asyncFn: (...args: any) => Promise<T>\r\n  data: T\r\n  setData: (value: T) => void\r\n  loading: boolean\r\n  error: R\r\n  immediate: boolean\r\n  setImmediate: (value: boolean) => void\r\n}\r\n\r\nconst useAsync = <T, R = string>(\r\n  initialValue: T,\r\n  asyncFn: (...args: any) => Promise<T>,\r\n  instant: boolean = true\r\n): useAsyncReturn<T, R | null> => {\r\n  const [data, setData] = useState<T>(initialValue)\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState<R | null>(null)\r\n  const [immediate, setImmediate] = useState(instant)\r\n\r\n  const executeFn = useCallback(\r\n    async (...args) => {\r\n      setLoading(true)\r\n      try {\r\n        const res = await asyncFn(...args)\r\n        setData(res)\r\n      } catch (error) {\r\n        setError(error)\r\n      }\r\n      setLoading(false)\r\n    },\r\n    [asyncFn]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (immediate) executeFn()\r\n  }, [immediate, executeFn])\r\n\r\n  return { asyncFn, data, setData, loading, error, immediate, setImmediate }\r\n}\r\n\r\nexport default useAsync\r\n","import { useState, useEffect } from 'react'\r\nimport { getCountDays } from '../utils/date'\r\n\r\n// format Date  2021-01-22\r\ninterface CountDays {\r\n  countDays: number\r\n  isValidDays: boolean\r\n}\r\n\r\nconst useCountDays = (firstDate: string, endDate: string): CountDays => {\r\n  const [countDays, setCountDays] = useState(0)\r\n  const [isValidDays, setIsValidDays] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const localCountDays = getCountDays(firstDate, endDate)\r\n    const condition = localCountDays > 0\r\n    condition && setCountDays(localCountDays)\r\n    setIsValidDays(condition)\r\n  }, [firstDate, endDate])\r\n\r\n  return { countDays, isValidDays }\r\n}\r\n\r\nexport default useCountDays\r\n","import React from 'react'\r\nimport classnames from 'classnames'\r\n\r\nimport { Cell } from '../../common'\r\n\r\nimport { useCalucateWidth } from '../../../hooks'\r\nimport { isEqualDate, getCountDays } from '../../../utils/date'\r\nimport { getTypeVacation, isFirstDay, isLastDay } from '../../../utils/vacations'\r\nimport { VacationTypes, Vacation } from '../../../types/model/vacation'\r\n\r\nexport interface MemberCellProps {\r\n  date: Date\r\n  vacations: Vacation[]\r\n}\r\n\r\nconst MemberCell: React.FC<MemberCellProps> = ({ date, vacations }) => {\r\n  const vacationElement = useCalucateWidth<Date, HTMLDivElement>(date)\r\n  const isPaid = getTypeVacation(vacations, date, VacationTypes.PAID)\r\n  const isUnPaid = getTypeVacation(vacations, date, VacationTypes.UN_PAID)\r\n  const isStartDay = isFirstDay(vacations, date)\r\n  const isEndDay = isLastDay(vacations, date)\r\n\r\n  const currentStartVacation: Vacation | undefined = vacations.find(({ startDate }) => {\r\n    return isEqualDate(date, startDate.split('-'))\r\n  })\r\n  const countDayInVacation =\r\n    currentStartVacation && getCountDays(currentStartVacation.startDate, currentStartVacation.endDate) + 1\r\n\r\n  return (\r\n    <Cell cellDate={date} classNames={['calendar-body__cell']}>\r\n      {(isUnPaid || isPaid) && (\r\n        <div\r\n          ref={vacationElement.elementRef}\r\n          className={classnames({\r\n            'cell-vacations': true,\r\n            'cell-vacations--paid': isPaid,\r\n            'cell-vacations--unpaid': isUnPaid,\r\n            'cell-vacations--start-vac': isStartDay,\r\n            'cell-vacations--end-vac': isEndDay,\r\n            'cell-vacations--unpaid-start-vac': isStartDay && isUnPaid,\r\n            'cell-vacations--unpaid-end-vac': isEndDay && isUnPaid,\r\n          })}\r\n        >\r\n          {countDayInVacation && (\r\n            <span style={{ width: vacationElement.width * countDayInVacation }} className=\"cell-vacations__text\">\r\n              Pd\r\n            </span>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Cell>\r\n  )\r\n}\r\n\r\nexport default React.memo(MemberCell)\r\n","import React from 'react'\r\nimport './member.scss'\r\n\r\nimport MemberCell from './MemberCell'\r\nimport { CellSumm } from '../common'\r\n\r\nimport { getAllDaysInMonth } from '../../utils/date'\r\nimport { getSumVacationsDaysByMonth, getSplitVacations } from '../../utils/vacations'\r\n\r\nimport { Member } from '../../types/model/member'\r\n\r\nexport interface MemberProps extends Member {\r\n  date: Date\r\n  theme?: string\r\n}\r\n\r\nconst MemberComponent: React.FC<MemberProps> = ({ date, theme, name, vacations }) => {\r\n  const allDays = getAllDaysInMonth(date)\r\n  const newVacations = getSplitVacations(vacations, allDays.length)\r\n\r\n  const summVacationsInMonth = getSumVacationsDaysByMonth(newVacations, date)\r\n\r\n  return (\r\n    <tr className={`calendar-body__row  ${theme}`}>\r\n      <td className=\"member calendar-body__cell\">\r\n        <span className=\"member__name\">{name}</span>\r\n      </td>\r\n      {allDays.map((date, index) => (\r\n        <MemberCell key={index} date={date} vacations={newVacations} />\r\n      ))}\r\n\r\n      <CellSumm classNames={['calendar-body__cell', 'cell-gray']}>{summVacationsInMonth}</CellSumm>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default React.memo(MemberComponent)\r\n","export const getPercentageOfAbsentCount = (percentageOfAbsent: number[], date: Date): number => {\r\n  return date.getFullYear() === new Date().getFullYear() ? percentageOfAbsent[date.getMonth()] : 0\r\n}\r\n","import React from 'react'\r\nimport classnames from 'classnames'\r\n\r\nimport styles from './teamInfo.module.scss'\r\n\r\nimport { CountUsers, WeekendPercents } from '../../common'\r\n\r\nimport { getPercentageOfAbsentCount } from '../../../utils/teams'\r\n\r\nimport { Team } from '../../../types/model/team'\r\n\r\nexport interface TeamInfoProps extends Team {\r\n  date: Date\r\n  isOpen?: boolean\r\n  toggleOpen?: () => void\r\n  classNames?: string[]\r\n}\r\n\r\nconst { teamInfo, teamInfo__name, teamInfo__other, teamInfo__countUsers } = styles\r\n\r\nconst TeamInfo: React.FC<TeamInfoProps> = ({\r\n  date,\r\n  name,\r\n  members,\r\n  percentageOfAbsent,\r\n  isOpen,\r\n  toggleOpen,\r\n  classNames = [],\r\n}) => {\r\n  return (\r\n    <div className={[teamInfo, ...classNames].join(' ')}>\r\n      <span className={teamInfo__name}>{name}</span>\r\n      <div className={teamInfo__other}>\r\n        <CountUsers countUsers={members.length} classNames={[teamInfo__countUsers]} />\r\n        <WeekendPercents\r\n          percent={getPercentageOfAbsentCount(percentageOfAbsent, date)}\r\n          classNames={['teamInfo__weekendPercent']}\r\n        />\r\n        <button\r\n          className={classnames({\r\n            'button-arrow-up': true,\r\n            'button-arrow-up--active': isOpen,\r\n          })}\r\n          onClick={toggleOpen}\r\n        ></button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(TeamInfo)\r\n","import { TTheme } from './types/theme'\r\n\r\nexport const THEMES: TTheme[] = [\r\n  ['melrose-theme', 'melrose-theme--background'],\r\n  ['malibu-theme', 'malibu-theme--background'],\r\n  ['mona-lisa-theme', 'mona-lisa-theme--background'],\r\n  ['atomic-tangerine-theme', 'atomic-tangerine-theme--background'],\r\n]\r\n","import React from 'react'\r\nimport classnames from 'classnames'\r\n\r\nimport './team.scss'\r\n\r\nimport { Cell } from '../common'\r\nimport TeamInfo from './TeamInfo'\r\nimport Member from '../Member'\r\n\r\nimport { useToggle } from '../../hooks'\r\n\r\nimport { THEMES } from '../../theme'\r\nimport { getAllDaysInMonth } from '../../utils/date'\r\n\r\nimport { Team } from '../../types/model/team'\r\n\r\nexport interface TeamProps {\r\n  date: Date\r\n  team: Team\r\n  themeIndex?: number\r\n  classNames?: string[]\r\n}\r\n\r\nconst TeamComponent: React.FC<TeamProps> = ({ team, date, themeIndex = 0, classNames = [] }) => {\r\n  const mainTheme = THEMES[themeIndex % THEMES.length][0]\r\n  const { isOpen, toggleOpen } = useToggle(true)\r\n\r\n  return (\r\n    <>\r\n      <tr\r\n        className={`\r\n        calendar-body__row  \r\n        ${mainTheme} \r\n        ${THEMES[themeIndex % THEMES.length][1]} \r\n        ${classnames({ 'calendar-table--closed': !isOpen })} ${[...classNames].join(' ')}`}\r\n      >\r\n        <td className=\"team\">\r\n          <TeamInfo date={date} {...team} isOpen={isOpen} toggleOpen={toggleOpen} />\r\n        </td>\r\n        {getAllDaysInMonth(date).map((date, index) => (\r\n          <Cell key={index} cellDate={date} classNames={['calendar-body__cell']}></Cell>\r\n        ))}\r\n\r\n        <Cell classNames={['calendar-body__cell', 'cell-gray']}></Cell>\r\n      </tr>\r\n\r\n      {isOpen && team.members.map((member) => <Member key={member.id} date={date} theme={mainTheme} {...member} />)}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default React.memo(TeamComponent)\r\n","import React from 'react'\r\nimport styles from './modal.module.scss'\r\nimport { TChildren } from '../../../../types/utilsTypes'\r\n\r\nexport interface ModalProps {\r\n  open: boolean\r\n  onClose: () => void\r\n  children?: TChildren\r\n}\r\n\r\nconst Modal: React.FC<ModalProps> = ({ children, open, onClose }) => {\r\n  const { overlay, modal } = styles\r\n\r\n  const handleClick = (e: React.MouseEvent) => {\r\n    const target = e.target as HTMLDivElement\r\n    if (target?.id === 'overlay') onClose()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {open && (\r\n        <div id=\"overlay\" className={overlay} onClick={handleClick}>\r\n          <div className={modal}>{children}</div>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default React.memo(Modal)\r\n","import React from 'react'\r\nimport styles from './modalHeader.module.scss'\r\nimport { TChildren } from '../../../../types/utilsTypes'\r\n\r\ninterface ModalHeaderProps {\r\n  className?: string[]\r\n  children?: TChildren\r\n}\r\n\r\nconst { modalHeader } = styles\r\n\r\nconst ModalHeader: React.FC<ModalHeaderProps> = ({ className = [], children }) => {\r\n  return <div className={`${modalHeader} ${className.join(' ')}`}>{children}</div>\r\n}\r\n\r\nexport default React.memo(ModalHeader)\r\n","import React from 'react'\r\nimport styles from './modalBody.module.scss'\r\n\r\ninterface ModalBodyProps {\r\n  children?: any\r\n  classNames?: string[]\r\n}\r\nconst { modalBody } = styles\r\n\r\nconst ModalBody: React.FC<ModalBodyProps> = ({ children, classNames = [] }) => {\r\n  return <div className={[modalBody, ...classNames].join(' ')}>{children}</div>\r\n}\r\n\r\nexport default React.memo(ModalBody)\r\n","import React from 'react'\r\nimport styles from './modalFooter.module.scss'\r\n\r\ninterface ModalFooterProps {\r\n  children?: JSX.Element | JSX.Element[]\r\n  className?: string[]\r\n}\r\n\r\nconst { modalFooter } = styles\r\n\r\nconst ModalFooter: React.FC<ModalFooterProps> = ({ children, className = [] }) => (\r\n  <div className={`${modalFooter} ${className.join(' ')}`}>{children}</div>\r\n)\r\n\r\nexport default React.memo(ModalFooter)\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport { CalendarModalHeader } from './CalendarModalHeader'\r\nimport { CalendarModalFooter } from './CalendarModalFooter'\r\nimport { FormDates, FormTeamsSelect, FormMembersSelect, FormVacationTypeSelect } from './../CalendarFormItems'\r\n\r\nimport { Modal, ModalBody } from '../common/Modal'\r\nimport { Form, Alert } from '../common'\r\n\r\nimport { useInput, useSelect, useCountDays } from '../../hooks'\r\nimport { getFutureOrPastDate } from '../../utils/date'\r\nimport { findByID } from '../../utils/forArrays'\r\nimport { hasExistVacation, getMemberVacations } from '../../utils/vacations'\r\n\r\nimport { VacationTypes, vacationUnion, VacationDTO, Vacation, VacationDate } from '../../types/model/vacation'\r\nimport { Team } from '../../types/model/team'\r\n\r\nenum ErrorsMessage {\r\n  MEMBER_IS_UNDEFINED = 'Такого пользователя не существует',\r\n  VACATION_INCLUDE_VACATION = 'Такой отпуск уже существует или включает другой отпуск',\r\n}\r\n\r\nexport interface CalendarModalProps {\r\n  teams: Team[]\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  onSubmit: (...args: any) => Promise<void>\r\n}\r\n\r\nconst CalendarModal: React.FC<CalendarModalProps> = ({ teams, isOpen, onClose, onSubmit }) => {\r\n  console.log('Team', teams)\r\n  const startDate = useInput(getFutureOrPastDate(0))\r\n  const endDate = useInput(getFutureOrPastDate(7))\r\n  const [isDisabled, setIsDisabled] = useState(false)\r\n  const { countDays, isValidDays } = useCountDays(startDate.value, endDate.value)\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n  const teamsSelect = useSelect('')\r\n  const membersSelect = useSelect('')\r\n  const typesSelect = useSelect(VacationTypes.UN_PAID)\r\n\r\n  const [currentVacations, setCurrentVacations] = useState<Vacation[] | undefined>(undefined)\r\n\r\n  useEffect(() => {\r\n    setIsDisabled(!isValidDays)\r\n  }, [isValidDays])\r\n\r\n  // TODO: It could be done better\r\n  useEffect(() => {\r\n    const currentTeam = findByID(teams, teamsSelect.value)\r\n    const defaultTeamID = currentTeam?.id || teams[0]?.id\r\n    teamsSelect.setValue(defaultTeamID)\r\n    console.log('TeamSelectValue', teamsSelect.value)\r\n    const currentMember = currentTeam && findByID(currentTeam.members, membersSelect.value)\r\n    if (currentTeam) {\r\n      const defaultMemberID = currentMember?.id || currentTeam?.members[0]?.id\r\n      membersSelect.setValue(defaultMemberID)\r\n      console.log('MemberSelectValue', membersSelect.value)\r\n    }\r\n  }, [teams, teamsSelect, membersSelect])\r\n\r\n  useEffect(() => {\r\n    setCurrentVacations(getMemberVacations(teams, membersSelect.value))\r\n  }, [teams, membersSelect.value])\r\n\r\n  // It's bad fn need rebuild\r\n  const handleOnSubmit = () => {\r\n    const vacationDate: VacationDate = {\r\n      startDate: startDate.value,\r\n      endDate: endDate.value,\r\n    }\r\n\r\n    const currentVacation: Vacation = {\r\n      type: typesSelect.value as vacationUnion,\r\n      ...vacationDate,\r\n    }\r\n\r\n    const submitVacation: VacationDTO = {\r\n      currentTeamID: teamsSelect.value,\r\n      currentMemberID: membersSelect.value,\r\n      ...currentVacation,\r\n    }\r\n\r\n    if (!currentVacations) {\r\n      return setErrorMessage(ErrorsMessage.MEMBER_IS_UNDEFINED)\r\n    }\r\n\r\n    if (!hasExistVacation(currentVacations, vacationDate)) {\r\n      setIsDisabled(true)\r\n      onSubmit(submitVacation).then(() => {\r\n        onClose()\r\n        setIsDisabled(false)\r\n      })\r\n    } else {\r\n      return setErrorMessage(ErrorsMessage.VACATION_INCLUDE_VACATION)\r\n    }\r\n  }\r\n\r\n  const handleAccept = () => {\r\n    setErrorMessage('')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal open={isOpen} onClose={onClose}>\r\n        <CalendarModalHeader isValidDays={isValidDays} countDays={countDays} />\r\n        <ModalBody>\r\n          <Form>\r\n            <FormDates\r\n              startDate={{ changeValue: startDate.changeValue, value: startDate.value }}\r\n              endDate={{ changeValue: endDate.changeValue, value: endDate.value }}\r\n            />\r\n\r\n            <FormTeamsSelect\r\n              teams={teams}\r\n              select={{ changeValue: teamsSelect.changeValue, value: teamsSelect.value }}\r\n            />\r\n\r\n            <FormMembersSelect\r\n              teams={teams}\r\n              teamId={teamsSelect.value}\r\n              select={{ changeValue: membersSelect.changeValue, value: membersSelect.value }}\r\n            />\r\n\r\n            <FormVacationTypeSelect select={{ changeValue: typesSelect.changeValue, value: typesSelect.value }} />\r\n          </Form>\r\n        </ModalBody>\r\n\r\n        <CalendarModalFooter onClose={onClose} onSubmit={handleOnSubmit} isDisabled={isDisabled} />\r\n\r\n        {errorMessage ? <Alert message={errorMessage} error onAccept={handleAccept} /> : <></>}\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default React.memo(CalendarModal)\r\n","import React from 'react'\r\nimport { Button } from '../../common'\r\nimport { ModalFooter } from '../../common/Modal'\r\n\r\nexport interface CalendarModalFooterProps {\r\n  onClose: () => void\r\n  isDisabled: boolean\r\n  onSubmit: () => void\r\n  classNames?: string[]\r\n}\r\n\r\nexport const CalendarModalFooter: React.FC<CalendarModalFooterProps> = React.memo(\r\n  ({ onClose, isDisabled, onSubmit, classNames = [] }) => {\r\n    return (\r\n      <ModalFooter className={[...classNames]}>\r\n        <Button secondary onClick={onClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button type=\"submit\" disabled={isDisabled} onClick={isDisabled ? () => {} : onSubmit}>\r\n          Send\r\n        </Button>\r\n      </ModalFooter>\r\n    )\r\n  }\r\n)\r\n","import React from 'react'\r\nimport { FormItem, InputDate } from '../../common'\r\n\r\nimport { ControlForInput } from '../../../types/controls'\r\n\r\nexport interface FormDatesProps {\r\n  startDate: ControlForInput\r\n  endDate: ControlForInput\r\n  classNames?: string[]\r\n}\r\n\r\nconst FormDates: React.FC<FormDatesProps> = ({ startDate, endDate, classNames = [] }) => {\r\n  return (\r\n    <FormItem title=\"Dates\" classNames={classNames} inner>\r\n      <InputDate label=\"From\" onChange={startDate.changeValue} value={startDate.value} name=\"startDate\" />\r\n      <InputDate label=\"To\" onChange={endDate.changeValue} value={endDate.value} name=\"endDate\" />\r\n    </FormItem>\r\n  )\r\n}\r\n\r\nexport default React.memo(FormDates)\r\n","import React from 'react'\r\nimport styles from './select.module.scss'\r\n\r\nexport interface SelectProps extends React.SelectHTMLAttributes<HTMLSelectElement> {\r\n  onChange: (e: React.ChangeEvent<HTMLSelectElement>) => void\r\n  value: string | number\r\n  children?: any\r\n}\r\n\r\nconst isOption = (child: any): boolean => child.type === 'option' || child.type?.type?.name === 'Option'\r\nconst renderOptions = (child: any): any | never => {\r\n  try {\r\n    if (isOption(child)) return child\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({ children, value, ...rest }) => {\r\n  const { select, select__main } = styles\r\n\r\n  return (\r\n    <div className={select}>\r\n      <select className={select__main} value={value} {...rest}>\r\n        {React.Children.map(children, renderOptions)}\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(Select)\r\n","import React from 'react'\r\nimport styles from './option.module.scss'\r\n\r\nexport interface OptionProps extends React.OptionHTMLAttributes<HTMLOptionElement> {\r\n  title: string\r\n}\r\n\r\nconst Option: React.FC<OptionProps> = ({ title, ...rest }) => {\r\n  const { select__option } = styles\r\n  return (\r\n    <option className={select__option} {...rest}>\r\n      {title}\r\n    </option>\r\n  )\r\n}\r\n\r\nexport default React.memo(Option)\r\n","import React from 'react'\r\nimport { FormItem } from '../../common'\r\nimport { Select, Option } from '../../common/Select'\r\n\r\nimport { Team } from '../../../types/model/team'\r\nimport { ControlForSelect } from '../../../types/controls'\r\n\r\nexport interface FormTeamsSelectProps {\r\n  teams: Team[]\r\n  select: ControlForSelect\r\n  classNames?: string[]\r\n}\r\n\r\nconst FormTeamsSelect: React.FC<FormTeamsSelectProps> = ({ teams, select, classNames = [] }) => {\r\n  console.log('Teams in select', teams)\r\n  \r\n  return (\r\n    <FormItem title=\"Teams\" classNames={classNames}>\r\n      <Select value={select.value} onChange={select.changeValue} name=\"teams\">\r\n        {teams.map(({ name, id }) => {\r\n\r\n          console.log('Select Team', id)\r\n          return <Option key={id} title={name} value={id} />\r\n        })}\r\n      </Select>\r\n    </FormItem>\r\n  )\r\n}\r\n\r\nexport default React.memo(FormTeamsSelect)\r\n","import React from 'react'\r\nimport { FormItem } from '../../common'\r\nimport { Select, Option } from '../../common/Select'\r\nimport { findByID } from '../../../utils/forArrays'\r\n\r\nimport { Team } from '../../../types/model/team'\r\nimport { ControlForSelect } from '../../../types/controls'\r\n\r\nexport interface FormMembersSelectProps {\r\n  teams: Team[]\r\n  teamId: string\r\n  select: ControlForSelect\r\n  classNames?: string[]\r\n}\r\n\r\nconst FormMembersSelect: React.FC<FormMembersSelectProps> = ({ teams, select, teamId, classNames = [] }) => {\r\n  return (\r\n    <FormItem title=\"User\" classNames={classNames}>\r\n      <Select onChange={select.changeValue} value={select.value} name=\"members\">\r\n        {findByID(teams, teamId)?.members.map(({ name, id }) => (\r\n          <Option key={id} title={name} value={id} />\r\n        ))}\r\n      </Select>\r\n    </FormItem>\r\n  )\r\n}\r\n\r\nexport default React.memo(FormMembersSelect)\r\n","import React from 'react'\r\nimport { FormItem } from '../../common'\r\nimport { Select, Option } from '../../common/Select'\r\n\r\nimport { ControlForSelect } from '../../../types/controls'\r\nimport { VacationTypes } from '../../../types/model/vacation'\r\n\r\nexport interface FormVacationTypeSelectProps {\r\n  select: ControlForSelect\r\n  classNames?: string[]\r\n}\r\n\r\nconst FormVacationTypeSelect: React.FC<FormVacationTypeSelectProps> = ({ select, classNames = [] }) => {\r\n  return (\r\n    <FormItem title=\"Vac Type\" classNames={classNames}>\r\n      <Select onChange={select.changeValue} value={select.value} name=\"types\">\r\n        <Option title=\"Paid Day Off (PD)\" value={VacationTypes.UN_PAID} />\r\n        <Option title=\"Paid Day On (PD)\" value={VacationTypes.PAID} />\r\n      </Select>\r\n    </FormItem>\r\n  )\r\n}\r\n\r\nexport default React.memo(FormVacationTypeSelect)\r\n","export const MAIN_URL: string = 'https://calendar-25b31-default-rtdb.firebaseio.com'\r\n","const makeRequest = <T>(URL: string, options?: RequestInit): Promise<T> => {\r\n  return fetch(URL, options).then((res) => res.json())\r\n}\r\n\r\nexport default makeRequest\r\n","import { MAIN_URL } from './URLS'\r\nimport { makeRequest } from '../utils'\r\n\r\nimport { Member } from '../types/model/member'\r\nimport { Team } from '../types/model/team'\r\nimport { TeamsResponse } from '../types/model/teams'\r\nimport { reverseDate } from '../utils/date'\r\n\r\nexport const getTeams = (): Promise<Team[]> => {\r\n  return (\r\n    makeRequest<TeamsResponse>(`${MAIN_URL}/teams.json`)\r\n      //  Formatting to Front\r\n      .then((teams) => Object.values(teams))\r\n      .then((teams) => {\r\n        teams.forEach((team: Team) => {\r\n          team.members = Object.values(team.members)\r\n\r\n          team.members.forEach((member: Member) => {\r\n            member.vacations = Object.values(member.vacations).map(({ startDate, endDate, type }) => ({\r\n              startDate: reverseDate(startDate),\r\n              endDate: reverseDate(endDate),\r\n              type,\r\n            }))\r\n          })\r\n        })\r\n        return teams\r\n      })\r\n  )\r\n}\r\n","import { MAIN_URL } from './URLS'\r\nimport { makeRequest } from '../utils/'\r\nimport { reverseDate } from '../utils/date'\r\nimport { VacationDTO, Vacation } from '../types/model/vacation'\r\nimport { FirebaseResponse } from '../types/model/firebase'\r\n\r\nexport const patchVacation = (submitVacation: VacationDTO): Promise<Vacation> => {\r\n  const { currentTeamID, currentMemberID, ...vacation } = submitVacation\r\n\r\n  const preparedVacation = {\r\n    [Date.now()]: {\r\n      startDate: reverseDate(vacation.startDate, '-', '.'),\r\n      endDate: reverseDate(vacation.endDate, '-', '.'),\r\n      type: vacation.type,\r\n    },\r\n  }\r\n\r\n  return makeRequest<FirebaseResponse<Vacation>>(\r\n    `${MAIN_URL}/teams/${currentTeamID}/members/${currentMemberID}/vacations.json`,\r\n    {\r\n      method: 'PATCH',\r\n      body: JSON.stringify(preparedVacation),\r\n    }\r\n  ).then((vacation) => Object.values(vacation)[0])\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Button } from '../components/common'\r\nimport {\r\n  CalendarNavigation,\r\n  Summary,\r\n  CalendarModal,\r\n  CalendarHeader,\r\n  CalendarFooter,\r\n  Team as TeamComponent,\r\n} from '../components'\r\n\r\nimport { useToggle, useAsync } from '../hooks'\r\n\r\nimport { getTeams } from '../api/teams'\r\nimport { patchVacation } from '../api/vacations'\r\nimport { getPercentageOfAbsentCount } from '../utils/teams'\r\n\r\nimport { Team } from '../types/model/team'\r\nimport { Vacation, VacationDTO } from '../types/model/vacation'\r\n\r\nconst App = () => {\r\n  const [date, setDate] = useState<Date>(new Date())\r\n  const { data: teams, loading: teamsLoading, error: teamsError, setData: setTeams } = useAsync<Team[]>([], getTeams)\r\n  const { asyncFn: asyncPathcVacation, error: vacationError } = useAsync<Vacation>({} as Vacation, patchVacation)\r\n  const [countUsers, setCountUsers] = useState(0)\r\n  const [percent, setPercent] = useState(0)\r\n  const calendarModal = useToggle()\r\n\r\n  const handleOnChangeMonth = (date: Date) => {\r\n    setDate(date)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getCountUsers = (): number => teams.reduce((acc, team) => (acc += team.members.length), 0)\r\n\r\n    setCountUsers(getCountUsers())\r\n  }, [teams])\r\n\r\n  useEffect(() => {\r\n    const getPercent = (): number =>\r\n      teams.reduce((acc, team) => (acc += getPercentageOfAbsentCount(team.percentageOfAbsent, date)), 0)\r\n\r\n    setPercent(getPercent())\r\n  }, [date, teams])\r\n\r\n  const onSubmit = (submitVacation: VacationDTO): Promise<void> => {\r\n    return asyncPathcVacation(submitVacation).then((res) => {\r\n      if (res) {\r\n        getTeams().then((teams) => setTeams(teams))\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <CalendarNavigation date={date} onChangeMonth={handleOnChangeMonth} classNames={['calendarNavigation']} />\r\n        <table className=\"calendar-table\">\r\n          <CalendarHeader date={date}>\r\n            <Button iconPlus onClick={calendarModal.toggleOpen}>\r\n              Add Vacation\r\n            </Button>\r\n          </CalendarHeader>\r\n\r\n          <tbody className=\"calendar-body\">\r\n            {teams.map((team, index) => (\r\n              <TeamComponent\r\n                key={team.id}\r\n                team={team}\r\n                date={date}\r\n                themeIndex={index}\r\n                classNames={['calendar-table--indentation']}\r\n              />\r\n            ))}\r\n          </tbody>\r\n          <CalendarFooter date={date} teams={teams} classNames={['calendar-table--indentation']} />\r\n        </table>\r\n        <Summary date={date} countUsers={countUsers} percent={percent} classNames={['calendar__summary']} />\r\n      </div>\r\n\r\n      <CalendarModal\r\n        teams={teams}\r\n        isOpen={calendarModal.isOpen}\r\n        onClose={calendarModal.toggleOpen}\r\n        onSubmit={onSubmit}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { App } from './containers'\r\n\r\nimport './styles/index.scss'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}